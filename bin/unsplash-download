#!/bin/bash

# Simple script's pulling given $UNSPLASH_COLLECTION to a given directory

POSITIONAL=()
while [[ $# -gt 0 ]]; do key="$1"
case $key in
    -h|--help)
      echo "Simple script to download an unsplash photos collection."
      echo ""
      echo "Arguments:"
      echo "  -d | --directory | $UNSPLASH_DIR: Directory to download photos to"
      echo "  -c | --collection | \$UNSPLASH_COLLECTION: Unsplash collection ID"
      echo "  -t | --token | \$UNSPLASH_TOKEN: Unsplash API token"
      echo "  -f | --force: clean up the directory before download"
      echo "  --debug: prints debug info"
      exit 0;
    ;;
    -d|--directory)
    DIR="$2"
    shift # past argument
    shift # past value
    ;;
    -c|--collection)
    COLLECTION="$2"
    shift # past argument
    shift # past value
    ;;
    -t|--token)
    TOKEN="$2"
    shift # past argument
    shift # past value
    ;;
    -f|--force)
    FORCE=true
    shift # past argument
    ;;
    --debug)
    DEBUG=true
    shift # past argument
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

[[ -z "$COLLECTION" ]] && COLLECTION="$UNSPLASH_COLLECTION"
[[ -z "$DIR" ]] && DIR="$UNSPLASH_DIR"
[[ -z "$TOKEN" ]] && TOKEN="$UNSPLASH_TOKEN"

if [ ! -z $DEBUG ]; then
  echo "Collection: $COLLECTION"
  echo "Directory: $DIR"
  echo "Token: $TOKEN"
  echo "Force: $FORCE"
  echo "Debug: $DEBUG"
fi

if [ -z "$COLLECTION" ] || [ -z "$DIR" ] || [ -z "$TOKEN" ]; then
  echo "Looks like some arguments are missed. Please check the token, collection, and directory."
  exit 1;
fi

[[ ! -z "$FORCE" ]] && rm -rf $DIR
mkdir -p $DIR

PAGE=1
PER_PAGE=30
URLS=""
DO_REQUEST=true

while [ $PAGE -ne 0 ]; do
  RESPONSE=`curl --retry 3 -s -H "Authorization: Client-ID $TOKEN" https://api.unsplash.com/collections/$COLLECTION/photos\?per_page\=$PER_PAGE\&page\=$PAGE` 
  _URLS=`echo "$RESPONSE" |  jq ".[] | .urls.full"`
  URLS+=$_URLS
  [[ `echo "$_URLS" | wc -l` -eq "$PER_PAGE" ]] && let "PAGE++" || PAGE=0
done;

if [ -z "$URLS" ]; then
  echo "Empty collection: $COLLECTION";
  exit 2;
fi

LENGTH=`echo "$URLS" | wc -l`
CURRENT_INDEX=0
for URL in $URLS; do 
  printf "[$CURRENT_INDEX/$LENGTH] ";
  if [[ $URL =~ \/(photo.*)\? ]]; then
    NAME="${DIR}/${BASH_REMATCH[1]}.jpg";
    if test -f $NAME; then
      printf "File Exists: ${NAME##*/}"
    else
      printf "Downloading: ${NAME##*/}"
      curl -s --retry 3 `sed -e 's/^"//' -e 's/"$//' <<< "$URL"` -o $NAME
    fi
    sleep 0.1
    printf "\33[2K\r"
    let "CURRENT_INDEX++"
  fi
done

exit 0;
